name: "Push code to master"
on:
  push:
    branches:
      - master

jobs:

  find-changes:
    outputs:
      changed_directories: ${{ steps.set-output.outputs.changed_directories }}
    name: Find Changes
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v44
      with:
        dir_names: true
        dir_names_max_depth: 2 
        json: true
        quotepath: false
        files: |
          microservices/

    - name: 'Set output in the matrix format'
      id: set-output
      run: echo "changed_directories={\"dir\":${{ steps.changed-files.outputs.all_changed_files }}}" >> "$GITHUB_OUTPUT"

  build_and_deploy:
    name: "Build & Deploy"
    runs-on: ubuntu-latest
    if: ${{ needs.find-changes.outputs.changed_directories != '' }}
    needs: [find-changes]

    strategy:
      matrix: ${{fromJson(needs.find-changes.outputs.changed_directories)}}

    defaults:
      run:
        working-directory: ${{ matrix.dir }}

    steps:

      - name: Checkout code
        uses: actions/checkout@v2
      
      # This probably wont do much for this but it was *recommended*
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Print cwd as debug
        run : |
          pwd
          find . -type d

      - name: Get current ts
        id: ts
        run: echo "::set-output name=ts::$(ts +'%s')"

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.dir }}
          push: true
          tags: registry.lognes.dev/${{ matrix.dir }}:latest,registry.lognes.dev/${{ matrix.dir }}:master-${{ steps.ts.outputs.ts }}